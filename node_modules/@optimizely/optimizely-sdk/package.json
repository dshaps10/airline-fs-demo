{
  "_from": "@optimizely/optimizely-sdk",
  "_id": "@optimizely/optimizely-sdk@2.1.2",
  "_inBundle": false,
  "_integrity": "sha512-MLnBouyEVgUCoM+QU+3kbA+bhsOC2Bbbp9Oev4Od2Qblr4cjuaoVVmMlCpNM5emynb6CJ8hq4hyPPpsrG8H5NA==",
  "_location": "/@optimizely/optimizely-sdk",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@optimizely%2foptimizely-sdk",
    "fetchSpec": "latest",
    "name": "@optimizely/optimizely-sdk",
    "raw": "@optimizely/optimizely-sdk",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@optimizely",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@optimizely/optimizely-sdk/-/optimizely-sdk-2.1.2.tgz",
  "_shasum": "0cf36c14aa072ab059462802ebeb041482dd7cf6",
  "_spec": "@optimizely/optimizely-sdk",
  "_where": "/Users/dshapiro/Desktop/air_new_zealand_demo_app",
  "browser": "lib/index.browser.js",
  "bugs": {
    "url": "https://github.com/optimizely/javascript-sdk/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "json-schema": "^0.2.3",
    "lodash": "^4.0.0",
    "murmurhash": "0.0.2",
    "sprintf": "^0.1.5",
    "uuid": "^3.0.1"
  },
  "deprecated": false,
  "description": "JavaScript SDK package for Optimizely X Full Stack",
  "devDependencies": {
    "bluebird": "^3.4.6",
    "chai": "^3.5.0",
    "coveralls": "^2.13.1",
    "eslint": "^2.9.0",
    "grunt": "^1.0.1",
    "grunt-karma": "^2.0.0",
    "istanbul": "^0.4.5",
    "json-loader": "^0.5.4",
    "karma": "^2.0.0",
    "karma-browserstack-launcher": "^1.2.0",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.1.1",
    "karma-mocha": "^1.3.0",
    "karma-sinon": "^1.0.5",
    "karma-webpack": "^2.0.3",
    "load-grunt-tasks": "^0.6.0",
    "mathjs": "^3.3.0",
    "mocha": "^2.5.3",
    "mocha-lcov-reporter": "^1.3.0",
    "nock": "^7.7.2",
    "sinon": "^2.3.1",
    "webpack": "^2.6.0"
  },
  "files": [
    "dist/",
    "lib/",
    "LICENSE",
    "CHANGELOG",
    "README.md"
  ],
  "homepage": "https://github.com/optimizely/javascript-sdk#readme",
  "keywords": [
    "optimizely"
  ],
  "main": "dist/optimizely.node.js",
  "name": "@optimizely/optimizely-sdk",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# Optimizely JavaScript SDK\n\nThis repository houses the JavaScript SDK for Optimizely X Full Stack.\n\n## Getting Started\n\n### Installing the SDK\n\nThe SDK is available through [npm](https://npmjs.com/package/optimizely-sdk). To install:\n\n```\nnpm install @optimizely/optimizely-sdk --save\n```\n\nOr to use in a non CommonJS fashion in the Browser:\n\n1. Run `npm run build`\n2. Pull in `dist/optimizely.browser.umd.min.js` as a `<script>`\n3. Use as global variable `window.optimizelyClient`\n\n### Migrating from 1.x.x\n\nThis version represents a major version change and, as such, introduces some breaking changes:\n\n- The Node SDK is now combined with the JavaScript SDK so that we have one `optimizely-sdk` package that works across both server + browser environments.\n\n- We no longer support legacy Node versions (under 4.0).\n\n- You will no longer be able to pass in `revenue` value as a stand-alone argument to the `track` call. Instead you will need to pass it as an entry in the [`eventTags`](https://developers.optimizely.com/x/solutions/sdks/reference/index.html?language=javascript#event-tags).\n\n### Feature Management Access\n\nTo access the Feature Management configuration in the Optimizely dashboard, please contact your Optimizely account executive.\n\n### Using the SDK\nSee the Optimizely X Full Stack testing [developer documentation](http://developers.optimizely.com/server/reference/index.html) to learn how to set up your first JavaScript project and use the SDK.\n\n## Development\n\n### Installing dependencies\n\n```npm install```\n\n### Unit tests\n\nYou can run all unit tests with:\n```\nnpm test\n```\n\n### Build distribution packages\n\n```\nnpm run build\n```\n\nThis command will build several distribution bundles under the `dist` directory:\n1. optimizely.browser.cjs.js - This is the main entry point for browser/client-side bundles\n2. optimizely.browser.umd.js - This is used when not packaging the optimizely-sdk with your own JS bundles. Instead you would load this script as a `<script>` tag and reference it via the global var `optimizelyClient`\n3. optimizely.node.js - This is the main entry point for Node apps\n\nThe browser bundles also come with a minified / production-ready version.\n\n### Environment Variables\n\nThe .yml of this project contains environment vairables for ```BROWSER_STACK_USERNAME``` and ```BROWSER_STACK_ACCESS_KEY```.\n\nThese variables, created in BrowserStack, are encrypted by the TravisCI public key. This is done directly with the TravisCI command line tools; for additional information see travis encrypt-file.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/optimizely/javascript-sdk.git"
  },
  "scripts": {
    "build": "npm run build-node && npm run build-browser",
    "build-browser": "npm run build-dev-cjs && npm run build-dev-umd && npm run build-prod-cjs && npm run build-prod-umd",
    "build-dev-cjs": "webpack lib/index.browser.js dist/optimizely.browser.cjs.js --output-library-target=commonjs",
    "build-dev-umd": "webpack lib/index.browser.js dist/optimizely.browser.umd.js --output-library=optimizelyClient --output-library-target=umd",
    "build-node": "npm run build-node-dev",
    "build-node-dev": "webpack lib/index.node.js dist/optimizely.node.js --target=node --output-library-target=commonjs2",
    "build-node-prod": "webpack -p lib/index.node.js dist/optimizely.node.min.js --target=node --output-library-target=commonjs2",
    "build-prod-cjs": "webpack -p lib/index.browser.js dist/optimizely.browser.cjs.min.js --output-library-target=commonjs",
    "build-prod-umd": "webpack -p lib/index.browser.js dist/optimizely.browser.umd.min.js --output-library=optimizelyClient --output-library-target=umd",
    "cover": "istanbul cover _mocha ./lib/*.tests.js ./lib/**/*.tests.js ./lib/**/**/*tests.js",
    "coveralls": "npm run cover -- --report lcovonly && cat ./coverage/lcov.info | coveralls",
    "lint": "eslint lib/**",
    "prepare": "npm test && npm run build",
    "test": "mocha ./lib/*.tests.js ./lib/**/*.tests.js ./lib/**/**/*tests.js --recursive",
    "test-travis": "npm run test && grunt"
  },
  "version": "2.1.2"
}
